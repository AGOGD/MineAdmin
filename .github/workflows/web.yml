name: Frontend Ci

on:
  push:
  pull_request:
  schedule:
    - cron: '0 2 * * *'

permissions:
  contents: read

env:
  CI: true
  TZ: Asia/Shanghai

jobs:
  test:
    name: Test
    if: github.actor != 'dependabot[bot]' && !contains(github.event.head_commit.message, '[skip ci]')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: web
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.8.0
      - name: Dump Directory
        run: ls -al && pwd
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: "pnpm"

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        if: ${{ github.ref_name == 'master' }}
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - uses: actions/cache/restore@v4
        if: ${{ github.ref_name != 'master' }}
        with:
          path: ${{ env.STORE_PATH }}
          key: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        shell: bash
        run: pnpm install

      # - name: Check Git version
      #   run: git --version

      # - name: Setup mock Git user
      #   run: git config --global user.email "you@example.com" && git config --global user.name "Your Name"

      - name: Vitest tests
        run: pnpm run test:unit

      # - name: Upload coverage
      #   uses: codecov/codecov-action@v4
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    name: Lint
    if: github.actor != 'dependabot[bot]' && !contains(github.event.head_commit.message, '[skip ci]')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: web
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.8.0
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: "pnpm"

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        if: ${{ github.ref_name == 'master' }}
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - uses: actions/cache/restore@v4
        if: ${{ github.ref_name != 'master' }}
        with:
          path: ${{ env.STORE_PATH }}
          key: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        shell: bash
        run: pnpm install

      - name: Lint
        run: pnpm run lint

  check:
    name: Check
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: web
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.8.0

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: "pnpm"

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - uses: actions/cache/restore@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        shell: bash
        run: pnpm install

      - name: Typecheck
        run: pnpm check:type

      # From https://github.com/rhysd/actionlint/blob/main/docs/usage.md#use-actionlint-on-github-actions
      - name: Check workflow files
        if: runner.os == 'Linux'
        run: |
          bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
          ./actionlint -color -shellcheck=""

  ci-ok:
    name: CI OK
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]' && !contains(github.event.head_commit.message, '[skip ci]') && always()
    needs: [test, check, lint]
    env:
      FAILURE: ${{ contains(join(needs.*.result, ','), 'failure') }}
    steps:
      - name: Check for failure
        run: |
          echo $FAILURE
          if [ "$FAILURE" = "false" ]; then
            exit 0
          else
            exit 1
          fi